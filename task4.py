from typing import List


def car_paths(n: int, m: int) -> List[List[int]]:
    """
    Просчитать количество маршрутов до каждой клетки с учетом возможных перемещений.

    :param n: Количество строк в таблице
    :param m: Количество столбцов в таблице

    :return: Новую таблицу с посчитанным количеством маршрутов в каждую клетку
    """
    # Создаем двумерный массив размером (n+1) x (m+1) для хранения количества маршрутов
    routes = [[0] * (m+1) for _ in range(n+1)]

    # Инициализируем базовые значения: количество маршрутов до клеток первой строки и первого столбца равно 1
    for i in range(1, n+1):
        routes[i][1] = 1
    for j in range(1, m+1):
        routes[1][j] = 1

    # Заполняем остальные клетки массива routes
    for i in range(2, n+1):
        for j in range(2, m+1):
            # Количество маршрутов до клетки (i, j) равно сумме количества маршрутов до клеток (i-1, j), (i, j-1) и (i-1, j-1)
            routes[i][j] = routes[i-1][j] + routes[i][j-1] + routes[i-1][j-1]

    # Возвращаем новую таблицу с количеством маршрутов до каждой клетки
    return routes


if __name__ == '__main__':
    paths = car_paths(4, 2)
    print(paths[-1][-1])  # 7